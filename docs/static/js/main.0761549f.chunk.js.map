{"version":3,"sources":["typescript/Reducer.tsx","hooks/useForms.tsx","typescript/Formularios.tsx","typescript/Funciones.tsx","hooks/useCounter.tsx","typescript/RandomImage.tsx","typescript/Memo.tsx","typescript/ObjetosLiterales.tsx","types/authTypes.js","actions/uiAction.js","actions/authAction.js","typescript/ReduxForm.tsx","typescript/ReduxFormLogin.tsx","typescript/ReduxMessage.tsx","typescript/Redux.tsx","typescript/RutaProtegida.tsx","typescript/RutaUrl.tsx","typescript/TiposBasicos.tsx","typescript/Urls.tsx","typescript/UseStates.tsx","api/reqRes.tsx","typescript/Usuarios.tsx","hooks/useUsuarios.tsx","routerLinks/PrivateRoute.js","routerLinks/RouterLinks.js","reducers/authReducer.js","reducers/uiReducer.js","reducersStore/store.js","App.tsx","index.tsx"],"names":["AuthTypes","useForms","formulario","useState","formularioFull","setstate","changeImput","value","campo","Formularios","usuario","password","type","className","placeholder","onChange","target","JSON","stringify","Funciones","numero1","numero2","useCounter","numeroInicio","parseInt","localStorage","getItem","toString","numero","setnumero","setItem","sumando","numeroSumado","RandomImage","memo","console","log","style","width","height","alt","src","Memo","verdaderoFalso","setverdaderoFalso","useMemo","index","procesoPruebas","fontSize","onClick","marginLeft","ObjetosLiterales","nombre","edad","direccion","pais","nro","inicialState","validando","token","authReducer","state","action","payload","logout","login","inicialStateTest","testReducer","accion","Reducer","mountedRef","useRef","useReducer","dispatch","numeroVista","dispatchReducer","useEffect","current","authValor","setTimeout","types","typesUI","finishlogin","validationLoginCredencial","loginValidation","then","loginPerson","id","name","catch","loginError","uid","displayName","a","Promise","resolve","reject","ReduxForm","useDispatch","formUsuarios","loading","useSelector","ui","onSubmit","event","preventDefault","disabled","ReduxFormLogin","to","ReduxMessage","auth","ucode","badge","message","Redux","RutaProtegida","RutaUrl","useParams","TiposBasicos","arreglos","push","join","Urls","href","UseStates","reqResApi","axios","create","baseURL","Usuarios","usuarios","setusuarios","paginaref","cargarUsuarios","get","params","page","resp","data","length","useUsuarios","map","avatar","first_name","last_name","email","colSpan","textAlign","PrivateRoute","isAutenticated","Component","component","rest","props","RouterLinks","exact","path","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0761549f.chunk.js","sourcesContent":["import { useReducer, useEffect, useRef } from 'react'\n\ninterface AuthState {\n    validando: boolean,\n    token: number | null,\n    nombre: string | null\n}\n\nconst inicialState: AuthState = {\n    validando: true,\n    token: null,\n    nombre: null\n}\n\ninterface AuthAction {\n    type: AuthTypes,\n    payload: AuthState | null\n}\n\nenum AuthTypes {\n    'logout',\n    'login'\n}\n\nconst authReducer = (state: AuthState, action: AuthAction): AuthState => {\n\n    const { type, payload } = action;\n\n    switch (type) {\n        case AuthTypes.logout:\n            return {\n                ...inicialState,\n                validando: false\n            };\n        case AuthTypes.login:\n            return payload ?? state;\n        default:\n            return state;\n    }\n\n}\n\n\nconst inicialStateTest: TestState = {\n    numero: 30\n}\n\ninterface TestState {\n    numero: number\n}\n\ninterface TestAction {\n    accion: string,\n    payload: TestState\n}\n\nconst testReducer = (state: TestState, action: TestAction): TestState => {\n\n    const { accion , payload } = action;\n\n    switch (accion) {\n        case 'sumar':\n            return {\n                numero: (payload.numero + 1)\n            };\n        case 'restar':\n            return {\n                numero: (payload.numero - 1)\n            };\n        default:\n            return state;\n    }\n}\n\n\nexport const Reducer = () => {\n    const mountedRef = useRef(true);\n    const [{ validando, token, nombre }, dispatch] = useReducer(authReducer, inicialState);\n    const [{ numero : numeroVista }, dispatchReducer] = useReducer(testReducer, inicialStateTest);\n\n    const login = () => {\n\n        const loginPerson: AuthState = {\n            validando: false,\n            token: 5526,\n            nombre: 'Daniel G'\n        }\n\n        const authValor: AuthAction = {\n            type: AuthTypes.login,\n            payload: loginPerson\n        }\n\n        dispatch(authValor)\n    }\n    const logout = () => {\n\n        const authValor: AuthAction = {\n            type: AuthTypes.logout,\n            payload: null\n        }\n\n        dispatch(authValor)\n    }\n\n    useEffect(() => {\n        mountedRef.current = true;\n\n        const authValor: AuthAction = {\n            type: AuthTypes.logout,\n            payload: null\n        }\n\n        setTimeout(() => {\n            if (mountedRef.current) {\n                dispatch(authValor)\n            }\n        }, 2000);\n\n        return () => {\n            mountedRef.current = false;\n        }\n\n    }, [])\n\n\n    if (validando) {\n        return (\n            <>\n                <p>Reducer</p>\n                <hr />\n                <b>Login</b>\n                <br /><br />\n                <div className=\"alert alert-info\">\n                    Validando...\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <div>\n            <p>Reducer</p>\n            <hr />\n            <b>Login</b>\n            <br /><br />\n\n            {\n                (token)\n                    ? (\n                        <>\n                            <div className=\"alert alert-success\">Autenticado como: {nombre}</div>\n                            <button className=\"btn btn-danger\" onClick={logout}>\n                                Logout\n                            </button>\n\n                            <button\n                                className=\"btn btn-primary\" \n                                style={{ marginLeft :10 }}\n                                onClick={\n                                    () => {\n\n                                        const valorAnt: TestState = {\n                                            numero : numeroVista\n                                        }\n\n\n                                        const sumando: TestAction = {\n                                            accion: 'sumar',\n                                            payload: valorAnt\n                                        }\n\n                                        dispatchReducer(sumando)\n                                    }\n                                }\n                            >\n                                Sumar\n                            </button>\n\n                            <button\n                                className=\"btn btn-primary\" \n                                style={{ marginLeft :10 }}\n                                onClick={\n                                    () => {\n\n                                        const valorAnt: TestState = {\n                                            numero : numeroVista\n                                        }\n\n\n                                        const restando: TestAction = {\n                                            accion: 'restar',\n                                            payload: valorAnt\n                                        }\n\n                                        dispatchReducer(restando)\n                                    }\n                                }\n                            >\n                                Restar\n                            </button>\n\n                            <b style={{ marginLeft :10 }} >Valor : {numeroVista}</b>\n                        </>\n                    )\n                    : (\n                        <>\n                            <div className=\"alert alert-danger\">No autenticado</div>\n                            <button className=\"btn btn-primary\" onClick={login}>\n                                Login\n                            </button>\n                        </>\n                    )\n            }\n\n\n        </div>\n    )\n}\n","import {useState} from 'react'\n\nexport const useForms = <T extends Object>(formulario: T) => {\n    const [formularioFull, setstate] = useState(formulario)\n\n    const changeImput = ( value :string, campo: keyof T ) => {\n        setstate({\n            ...formularioFull,\n            //Las llaves [] buscan el campo con esa propiedad\n            [campo] : value\n        });  \n    }\n\n    return {\n        ...formularioFull,\n        formularioFull,\n        changeImput\n    };\n}\n","import React from 'react'\nimport '../css/formulario.css'\nimport { useForms } from '../hooks/useForms';\n\nexport const Formularios = () => {\n\n    const { usuario , password,  changeImput, formularioFull} = useForms({\n        usuario : '',\n        password : ''\n    });\n    \n    return (\n        <div>\n             <p>Formularios</p>\n             <br/>\n             \n             <input\n                type=\"text\"\n                className=\"form-control inputFormulario\"\n                placeholder=\"Usuario\"\n                value={usuario}\n                onChange={ ( { target }) => changeImput( target.value , 'usuario') }\n             />\n\n              <input\n                type=\"password\"\n                className=\"form-control inputFormulario\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={ ( { target }) => changeImput( target.value , 'password') }\n             />\n\n\n            <code>\n                <pre>\n                    { JSON.stringify(formularioFull ,null,3) }\n                </pre>\n            </code>\n\n        </div>\n    )\n}","import React from 'react'\n\nexport const Funciones = () => {\n\n    const sumar = (numero1 : number, numero2 :number): number => {\n        return numero1 + numero2;\n    }\n\n    return (\n        <div>\n            <p>Funciones</p>\n            <b>{`EL resultado es ${ sumar(2,4) }`}</b>\n        </div>\n    )\n}\n","import {useState} from 'react'\n\nexport const useCounter = (numeroInicio : number) => {\n    \n    const [numero, setnumero] = useState( parseInt( localStorage.getItem('lastNumber') ?? numeroInicio.toString() ) );\n\n    const sumando = (numeroSumado: number) => {\n        setnumero(numero + numeroSumado);\n    }\n\n    localStorage.setItem('lastNumber', numero.toString() )\n\n    return { numero, sumando };\n}\n","import { memo } from 'react'\n\nexport const RandomImage = memo( () => {\n\n    console.log(\"se llama imagen\");\n\n    return (\n        <img style={{ width : 200, height : 200 }} alt={\"Random_Image\"} src={\"https://picsum.photos/200/300\"}></img>\n    )\n}\n)","import { useState, useMemo } from 'react'\nimport { useCounter } from '../hooks/useCounter';\nimport { RandomImage } from './RandomImage'\n\nexport const Memo = () => {\n\n    const { numero, sumando } = useCounter(10);\n    const [verdaderoFalso, setverdaderoFalso] = useState(true);\n\n    const procesoPruebas = (  ) => {    \n       for (let index = 0; index < 3; index++) {\n           console.log('Iteracion : ' + index);\n       } \n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useMemo ( () => procesoPruebas(), [numero] );\n\n    return (\n        <div>\n            <p>Memorize</p>\n            <i style={{ fontSize: 10}}>Es necesario observar la consola para ver las llamadas</i>\n            <br /><br/>\n\n            <div className=\"row\">\n                <RandomImage />\n            </div>\n            <br />\n\n\n\n            <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                    setverdaderoFalso(!verdaderoFalso)\n                }}\n            >\n                {JSON.stringify(verdaderoFalso)}\n            </button>\n\n            <button\n                style={{ marginLeft: 10 }}\n                className=\"btn btn-primary\"\n                onClick={() => {\n                    sumando(1)\n                }}\n            >\n                {numero}\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\ninterface Persona {\n    nombre:string,\n    edad:number,\n    direccion:Direccion\n}\n\ninterface Direccion{\n    pais:string,\n    nro:number\n}\n\nexport const ObjetosLiterales = () => {\n\n    const persona : Persona = {\n        nombre: 'Daniel',\n        edad: 30,\n        direccion: {\n            pais : 'Canada',\n            nro : 615\n        }\n    }\n\n    return (\n        <div>\n            <p>Objetos Literales</p>\n            <code>\n                <pre>\n                    {JSON.stringify(persona, null, 3)}\n                </pre>\n            </code>\n        </div>\n    )\n}\n","\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n    loginError : '[Auth] Login Error',\r\n}\r\n\r\nexport const typesUI = {\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n}","import { typesUI } from '../types/authTypes';\r\n\r\nexport const startlogin = () => ({\r\n    type: typesUI.uiStartLoading,\r\n    payload: null\r\n});\r\n\r\nexport const finishlogin = () => ({\r\n    type: typesUI.uiFinishLoading,\r\n    payload: null\r\n});\r\n","\r\nimport { types } from '../types/authTypes';\r\nimport { startlogin ,finishlogin } from './uiAction';\r\n\r\n\r\nexport const validationLoginCredencial = (usuario, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startlogin())\r\n    \r\n        loginValidation(usuario,password)\r\n            .then((loginPerson) => {\r\n                dispatch( login(loginPerson.id,loginPerson.name) );\r\n                dispatch( finishlogin() );\r\n            })\r\n            .catch(()=>{\r\n                dispatch( loginError() );\r\n                dispatch( finishlogin() );\r\n            })\r\n    }\r\n}\r\n\r\nexport const validationLogout = () => {\r\n    return (dispatch) => {\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const loginError = () => ({\r\n    type: types.loginError,\r\n    payload: null\r\n});\r\n\r\n\r\nexport const logout = () => ({\r\n    type: types.logout,\r\n    payload: null\r\n});\r\n\r\n\r\nconst loginValidation = async (usuario, password) => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(function() {\r\n            if(usuario===\"Daniel\" && password===\"123456\"){\r\n                const resultadoValidacion = {\r\n                    id: 64332,\r\n                    name: 'Daniel'\r\n                }\r\n                resolve(resultadoValidacion);\r\n            }else{\r\n                reject(\"Error de login\");\r\n            }\r\n        }, 3000);\r\n    })\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { validationLoginCredencial } from '../actions/authAction';\r\nimport { useForms } from '../hooks/useForms';\r\n\r\nexport const ReduxForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const formUsuarios = useForms({\r\n        usuario: '',\r\n        password: ''\r\n    });\r\n\r\n    // @ts-ignore\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const {usuario,password,changeImput} = formUsuarios;\r\n\r\n    const handleLogin = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        dispatch(validationLoginCredencial(formUsuarios.usuario,formUsuarios.password));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <hr/>\r\n        <p>Usuario: Daniel</p>\r\n        <p>Pass: 123456</p>\r\n        <form onSubmit={handleLogin}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control inputFormulario\"\r\n                placeholder=\"Usuario\"\r\n                value={usuario}\r\n                onChange={({ target }) => changeImput(target.value, 'usuario')}\r\n                disabled={loading}\r\n            />\r\n\r\n            <input\r\n                type=\"password\"\r\n                className=\"form-control inputFormulario\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                onChange={({ target }) => changeImput(target.value, 'password')}\r\n                disabled={loading}\r\n            />\r\n\r\n            <button\r\n                className=\"btn btn-sm btn-primary\"\r\n                type=\"submit\"\r\n                disabled={loading}\r\n            >\r\n                Login\r\n            </button>\r\n        </form> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { validationLogout } from '../actions/authAction';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ReduxFormLogin = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const hadleLogout = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        dispatch(validationLogout());\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <p><Link to=\"/rutaProtegida\">Ir a Ruta Protegida</Link></p>\r\n        <form onSubmit={hadleLogout}>\r\n            <button\r\n                className=\"btn btn-sm btn-danger\"\r\n                type=\"submit\"\r\n            >\r\n                Logout\r\n            </button>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const ReduxMessage = () => {\r\n    // @ts-ignore\r\n    const { ucode,name,badge,message } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n            <span className={badge}>\r\n                {\r\n                    (ucode) === 200 ? `Bienvenido ${name}!`: message\r\n                }\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ReduxForm } from './ReduxForm';\r\nimport { ReduxFormLogin } from './ReduxFormLogin';\r\nimport { ReduxMessage } from './ReduxMessage';\r\n\r\nexport const Redux = () => {\r\n\r\n    // @ts-ignore\r\n    const { ucode } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n            <p>Redux</p>\r\n            <b>Commando : </b> <p>npm install react-redux redux</p>\r\n            <b>Commando Typescript: </b> <p>npm i --save-dev @types/react-redux</p>\r\n            <b>Commando (Permite hacer dispatch dentro de los reducer): </b> <p>npm install --save redux-thunk</p>\r\n\r\n            {\r\n                (ucode === 0 || ucode === 300 || ucode === 400) ?\r\n                    <ReduxForm />\r\n                    : <></>\r\n            }\r\n\r\n            {\r\n                (ucode === 300 || ucode === 400) ?\r\n                    <>\r\n                        <br />\r\n                        <ReduxMessage />\r\n                    </> : <></>\r\n            }\r\n\r\n            {\r\n                (ucode === 200) ?\r\n                    <>\r\n                        <br />\r\n                        <ReduxMessage />\r\n                        <br />\r\n                        <ReduxFormLogin />\r\n                    </> : <></>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport const RutaProtegida = () => {\r\n    // @ts-ignore\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <div>\r\n            <h3>Esta Ruta está protegida</h3>\r\n            <h4>Bienvenido <b>{name}</b>!!</h4>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {\r\n   useParams\r\n} from \"react-router-dom\";\r\n  \r\ninterface ParamsRecibe{\r\n    id? : string\r\n}\r\n\r\n\r\nexport const RutaUrl = () => {\r\n\r\n    const { id } = useParams<ParamsRecibe>();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>Parametros por URL</p>\r\n            <br></br>\r\n            <b><i>El parametro enviado es :</i> { id } </b>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\n\nexport const TiposBasicos = () => {\n\n    const nombre:string = 'Daniel';\n    const edad:number = 30;\n    const activo:boolean = false;\n\n    const arreglos: string[] = [];\n    arreglos.push(\"Valor 1\");\n    arreglos.push(\"Valor 2\");\n    arreglos.push(\"Valor 3\");\n\n    return (\n        <div>\n            <p>Tipos Basicos</p>\n            {`${nombre} , ${edad} , ${ ( activo ) ? 'activo' : 'inactivo' } `}\n            <br/>\n            {arreglos.join(', ')}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const Urls = () => {\n    return (\n        <div>\n            <p>Url</p>\n            <b>Commando : </b> <p>npm i --save-dev @types/react-router-dom</p>\n            <b>Commando Typescript : </b> <p>npm i --save-dev @types/react-router-dom -D</p>\n            \n            <a href=\"https://reactrouter.com/web/guides/quick-start\">https://reactrouter.com/web/guides/quick-start</a>      \n        </div>\n    )\n}\n","import React from 'react'\nimport { useCounter } from '../hooks/useCounter'\n\nexport const UseStates = () => {\n\n    const {  numero, sumando  } = useCounter(20);\n\n    return (\n        <div>\n            <p>UseState</p>\n            <table className=\"table table-dark\" style={{ width: 300 }}>\n                <thead>\n                    <tr>\n                        <th><b>Contador: </b></th>\n                        <th>{numero}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={() => sumando(-1)}\n                            >\n                                -1\n                            </button>\n                        </td>\n                        <td>\n                            <button\n                                className=\"btn btn-primary\"\n                                onClick={() => sumando(1)}\n                            >\n                                +1\n                            </button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n\n        </div>\n    )\n}\n","import axios from \"axios\";\n\nexport const reqResApi = axios.create({\n    baseURL : 'https://reqres.in/api'\n});\n","import React,{useEffect} from 'react'\nimport { useUsuarios , IData} from '../hooks/useUsuarios';\n\nexport const Usuarios = () => {\n\n    const { usuarios ,cargarUsuarios, paginaref } = useUsuarios();\n\n    useEffect(() => {\n        cargarUsuarios();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const renderItem = ({ id, avatar, first_name, last_name, email }: IData) => {\n        return (\n            <tr key={id.toString()}>\n                <td>\n                    <img\n                        alt={first_name + \"_\" + last_name}\n                        className=\"rounded\" src={avatar}\n                        style={{ width: 80, height: 80 }} />\n                </td>\n                <td>{first_name} {last_name}</td>\n                <td>{email}</td>\n            </tr>\n        );\n    }\n\n    return (\n        <div>\n            <p>Peticiones Http</p>\n            <b>Commando : </b> <p> npm install axios // yarn add axios</p>\n            <a href=\"https://www.npmjs.com/package/axios\">https://www.npmjs.com/package/axios</a>\n            <br /><br />\n            <table className=\"table table-dark\" style={{ width: 600 }}>\n                <thead>\n                    <tr>\n                        <th>Avatar</th>\n                        <th>Nombre</th>\n                        <th>Email</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        //Lo mismo que\n                        //usuarios.map( usuario => renderItem(usuario) )\n                        usuarios.map(renderItem)\n                    }\n                    <tr>\n                        <td colSpan={3} style={{ textAlign: 'center' }}>Página: {paginaref}</td>\n                    </tr>\n                </tbody>\n            </table>\n                \n            <button className=\"btn btn-primary\" onClick={cargarUsuarios}>\n                Siguientes\n            </button>\n\n        </div>\n    )\n}\n","import {useState,useRef } from 'react'\nimport { reqResApi } from '../api/reqRes';\n\nexport interface IReqRes {\n    page: number;\n    per_page: number;\n    total: number;\n    total_pages: number;\n    data: IData[];\n    support: ISupport;\n}\n\nexport interface IData {\n    id: number;\n    email: string;\n    first_name: string;\n    last_name: string;\n    avatar: string;\n}\n\nexport interface ISupport {\n    url: string;\n    text: string;\n}\n\n\nexport const useUsuarios = () => {\n\n    const [usuarios, setusuarios] = useState<IData[]>([]);\n    const paginaref = useRef(1);\n\n    const cargarUsuarios = () => {\n        reqResApi.get<IReqRes>('/users', { params: {\n            page: paginaref.current\n        } })\n        .then(resp => {\n            const valorResp : IData[] = resp.data.data;\n            if(valorResp.length>0){\n                setusuarios(resp.data.data);\n                paginaref.current++;\n            }else{\n                paginaref.current = 1;\n                cargarUsuarios();\n            }\n        })\n        .catch(console.log);\n    }\n\n    /* Otra forma\n    const cargarUsuarios2 = async() => {\n        const resp = await reqResApi.get<IReqRes>('/users')\n        setusuarios(resp.data.data);\n    }\n    */\n\n    return {\n        usuarios,\n        cargarUsuarios,\n        paginaref : paginaref.current\n    };\n}\n","import React from 'react'\r\nimport {\r\n    Route,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n            component={ (props) => (\r\n                (isAutenticated===200) ? <Component {...props} /> : <Redirect to=\"/reduxLogin\" />\r\n            )}\r\n        />\r\n    )\r\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { Formularios } from '../typescript/Formularios';\nimport { Funciones } from '../typescript/Funciones';\nimport { Memo } from '../typescript/Memo';\nimport { ObjetosLiterales } from '../typescript/ObjetosLiterales';\nimport { Reducer } from '../typescript/Reducer';\nimport { Redux } from '../typescript/Redux';\nimport { RutaProtegida } from '../typescript/RutaProtegida';\nimport { RutaUrl } from '../typescript/RutaUrl';\nimport { TiposBasicos } from '../typescript/TiposBasicos';\nimport { Urls } from '../typescript/Urls';\nimport { UseStates } from '../typescript/UseStates';\nimport { Usuarios } from '../typescript/Usuarios';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const RouterLinks = () => {\n\n\n  // @ts-ignore\n  const { ucode } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"row\">\n        <div className=\"col\">\n          <ul>\n            <li>\n              <Link to=\"/urls\">Urls</Link>\n            </li>\n            <li>\n              <Link to=\"/tiposbasicos\">Tipos Basicos</Link>\n            </li>\n            <li>\n              <Link to=\"/objetosLiterales\">Objetos Literales</Link>\n            </li>\n            <li>\n              <Link to=\"/funciones\">Funciones</Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col\">\n          <ul>\n            <li>\n              <Link to=\"/usestate\">UseState / LocalStorage</Link>\n            </li>\n            <li>\n              <Link to=\"/reducer\">Reducer</Link>\n            </li>\n            <li>\n              <Link to=\"/usuarios\">Peticiones Http</Link>\n            </li>\n            <li>\n              <Link to=\"/formularios\">Formularios</Link>\n            </li>\n          </ul>\n        </div>\n        <div className=\"col\">\n          <ul>\n            <li>\n              <Link to=\"/memo\">Memorize</Link>\n            </li>\n            <li>\n              <Link to={\"/rutaurl/ValorParam\"}>Parametro por URL</Link>\n            </li>\n            <li>\n              <Link to={\"/reduxLogin\"}>Redux - Login</Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n\n\n      <div>\n        <Switch>\n          <Route exact path=\"/urls\" component={Urls} />\n          <Route exact path=\"/tiposbasicos\" component={TiposBasicos} />\n          <Route exact path=\"/objetosLiterales\" component={ObjetosLiterales} />\n          <Route exact path=\"/funciones\" component={Funciones} />\n          <Route exact path=\"/usestate\" component={UseStates} />\n          <Route exact path=\"/reducer\" component={Reducer} />\n          <Route exact path=\"/usuarios\" component={Usuarios} />\n          <Route exact path=\"/formularios\" component={Formularios} />\n          <Route exact path=\"/memo\" component={Memo} />\n          <Route exact path=\"/rutaurl/:id\" component={RutaUrl} />\n          <Route exact path=\"/reduxLogin\" component={Redux} />\n          <PrivateRoute path=\"/rutaProtegida\"\n            component={RutaProtegida}\n            isAutenticated={ucode}\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}","import { types } from '../types/authTypes';\r\n\r\nconst inicialState = {\r\n    uid: 0,\r\n    ucode: 0,\r\n    name : '',\r\n    badge: '',\r\n    message : ''\r\n}\r\n\r\nexport const authReducer = ( state = inicialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                ucode: 200,\r\n                name: action.payload.displayName,\r\n                badge:'badge bg-success',\r\n                message : 'Login Correcto'\r\n            }\r\n\r\n        case types.logout:\r\n            return { \r\n                uid: 0,\r\n                ucode: 400,\r\n                name : '',\r\n                badge:'badge bg-secondary',\r\n                message : 'Logout'\r\n            }\r\n\r\n        case types.loginError:\r\n            return { \r\n                uid: 0,\r\n                ucode: 300,\r\n                name : '',\r\n                badge:'badge bg-danger',\r\n                message : 'Fallo el login'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { typesUI } from '../types/authTypes';\r\n\r\nconst inicialState = {\r\n    loading : false\r\n}\r\n\r\nexport const uiReducer = ( state = inicialState, action ) => {\r\n    switch ( action.type ) {\r\n        case typesUI.uiStartLoading:\r\n            return {\r\n                loading : true\r\n            }\r\n        case typesUI.uiFinishLoading:\r\n            return {\r\n                loading : false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { createStore, combineReducers , applyMiddleware, compose  } from 'redux'\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth : authReducer,\r\n    ui : uiReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import React from 'react';\nimport './App.css';\nimport { RouterLinks } from './routerLinks/RouterLinks';\nimport { Provider } from 'react-redux'\nimport { store } from './reducersStore/store'\n\nfunction App() {\n  return (\n    <div>\n      <h1>React</h1>\n      <hr />\n      <Provider store={store}>\n        <RouterLinks />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}